name: module_4 tests

on:
  push:
    paths: ["module_4/**", ".github/workflows/test.yml"]
  pull_request:
    paths: ["module_4/**", ".github/workflows/test.yml"]

jobs:
  test:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:16
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: gradcafe
        ports: ["5432:5432"]
        options: >-
          --health-cmd="pg_isready -U postgres -d gradcafe -h localhost"
          --health-interval=3s --health-timeout=5s --health-retries=40

    env:
      PGHOST: 127.0.0.1
      PGPORT: 5432
      PGUSER: postgres
      PGPASSWORD: postgres
      PGDATABASE: gradcafe
      # If your code reads DATABASE_URL, this line makes it explicit:
      DATABASE_URL: postgresql://postgres:postgres@127.0.0.1:5432/gradcafe

    defaults:
      run:
        working-directory: module_4

    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-python@v5
        with:
          python-version: "3.12"

      - name: Install psql client & wait for DB
        run: |
          sudo apt-get update && sudo apt-get install -y postgresql-client
          for i in {1..60}; do
            if pg_isready -h "$PGHOST" -p "$PGPORT" -U "$PGUSER" -d "$PGDATABASE"; then
              psql -h "$PGHOST" -U "$PGUSER" -d "$PGDATABASE" -c "SELECT 1;" && break
            fi
            echo "Postgres not ready yet... ($i)"; sleep 2
          done

      - name: Install deps
        run: |
          python -m pip install --upgrade pip
          if [ -f requirements.txt ]; then
            pip install -r requirements.txt
          else
            pip install -e .
            pip install pytest pytest-cov psycopg[binary,pool] flask
          fi

      - name: Run tests with coverage
        run: |
          pytest -q --cov=src --cov-report=term-missing --cov-report=xml --cov-fail-under=1
          coverage report -m > coverage_summary.txt || true

      - uses: actions/upload-artifact@v4
        if: always()
        with:
          name: coverage-xml
          path: module_4/coverage.xml

      - uses: actions/upload-artifact@v4
        if: always()
        with:
          name: coverage-summary
          path: module_4/coverage_summary.txt
