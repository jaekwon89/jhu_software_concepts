name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

# Cancel older runs on the same branch
concurrency:
  group: ci-${{ github.ref }}
  cancel-in-progress: true

jobs:
  # ---------- (optional) style checks ----------
  lint:
    runs-on: ubuntu-latest
    defaults: { run: { working-directory: module_4 } }
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: "3.10"
          cache: pip
          cache-dependency-path: module_4/requirements.txt
      - name: Install linters
        run: |
          python -m pip install -U pip
          pip install ruff black
      - name: Ruff (lint)
        run: ruff check src tests
      - name: Black (format check)
        run: black --check .

  # ---------- tests + coverage (100% gate) ----------
  test:
    runs-on: ubuntu-latest
    needs: [lint]
    env:
      PIP_DISABLE_PIP_VERSION_CHECK: "1"
      PYTHONDONTWRITEBYTECODE: "1"
    defaults: { run: { working-directory: module_4 } }
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: "3.10"
          cache: pip
          cache-dependency-path: module_4/requirements.txt
      - name: Install deps
        run: |
          python -m pip install -U pip
          pip install -r requirements.txt
      - name: Run pytest with coverage (fail under 100)
        shell: bash
        run: |
          pytest -q \
            --cov=src \
            --cov-report=term-missing \
            --cov-report=xml:coverage.xml \
            --cov-report=html:cov_html \
            --cov-fail-under=100
          # Save a human-readable proof
          python - <<'PY'
          from pathlib import Path
          import subprocess
          out = subprocess.check_output(["coverage", "report", "-m"], text=True)
          Path("coverage_summary.txt").write_text(out)
          PY
      - name: Upload coverage artifacts
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: coverage
          path: |
            module_4/.coverage
            module_4/coverage.xml
            module_4/coverage_summary.txt
            module_4/cov_html
          if-no-files-found: warn

  # ---------- docs build (Sphinx) ----------
  docs:
    runs-on: ubuntu-latest
    needs: [test]   # build docs only if tests passed
    defaults: { run: { working-directory: module_4 } }
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: "3.11"
          cache: pip
          cache-dependency-path: module_4/docs/requirements.txt
      - name: Install doc tools
        run: |
          python -m pip install -U pip
          pip install -r docs/requirements.txt
      - name: Build Sphinx (treat warnings as errors)
        run: sphinx-build -b html -n -W -T docs/source docs/build/html
      - name: Upload docs artifact
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: docs-html
          path: module_4/docs/build/html
          if-no-files-found: warn
