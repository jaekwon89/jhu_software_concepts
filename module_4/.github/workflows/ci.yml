# .github/workflows/ci.yml
name: CI

on: [push, pull_request, workflow_dispatch]

concurrency:
  group: ci-${{ github.ref }}
  cancel-in-progress: true

jobs:
  lint:
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest]
    runs-on: ${{ matrix.os }}
    defaults: { run: { working-directory: module_4 } }
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: "3.10"
          cache: pip
          cache-dependency-path: module_4/requirements.txt
      - run: python -m pip install -U pip ruff black
      - run: ruff check src tests
      - run: black --check .

  test:
    needs: lint
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest]
        py: ["3.10"]
    runs-on: ${{ matrix.os }}
    defaults: { run: { working-directory: module_4 } }
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.py }}
          cache: pip
          cache-dependency-path: module_4/requirements.txt
      - run: python -m pip install -U pip
      - run: pip install -r requirements.txt
      - name: Run pytest with coverage gate
        run: >
          pytest -q --cov=src --cov-report=term-missing
          --cov-report=xml:coverage.xml
          --cov-report=html:cov_html
          --cov-fail-under=100
      - name: Save coverage summary (portable)
        run: >
          python -c "import pathlib,subprocess;
          pathlib.Path('coverage_summary.txt').write_text(
          subprocess.check_output(['coverage','report','-m'], text=True))"
      - uses: actions/upload-artifact@v4
        if: always()
        with:
          name: coverage-${{ matrix.os }}
          path: |
            module_4/.coverage
            module_4/coverage.xml
            module_4/coverage_summary.txt
            module_4/cov_html

  docs:
    needs: test
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest]
    runs-on: ${{ matrix.os }}
    defaults: { run: { working-directory: module_4 } }
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: "3.11"
          cache: pip
          cache-dependency-path: module_4/docs/requirements.txt
      - run: python -m pip install -U pip
      - run: pip install -r docs/requirements.txt
      - run: sphinx-build -b html -n -W -T docs/source docs/build/html
      - uses: actions/upload-artifact@v4
        if: always()
        with:
          name: docs-html-${{ matrix.os }}
          path: module_4/docs/build/html
